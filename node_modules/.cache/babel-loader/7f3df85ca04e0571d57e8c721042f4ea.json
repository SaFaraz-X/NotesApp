{"ast":null,"code":"var _jsxFileName = \"/Users/sauhilfaraz/Desktop/Launch Training/notes-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n/* \nManage four variables with state:\n\"title, note, titleList, and noteList\"\n\nUse the titleList and noteList to keep track of and save\nall the notes the user writes down so we can display them\n*/\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getNotes = e => {\n      let newNote = e.target.value; // Assigns the value of the 'e' parameter to 'newNote'\n\n      this.setState({\n        note: newNote // Update note with state\n\n      });\n    };\n\n    this.getTitle = e => {\n      let newTitle = e.target.value; // Assigns the value of the 'e' parameter to 'newTitle'\n\n      this.setState({\n        title: newTitle // Update title with state\n\n      });\n      console.log(this.state.title);\n    };\n\n    this.saveNote = () => {\n      if (this.state.title !== \"\" && this.state.note !== \"\") {\n        this.setState({\n          titleList: [this.state.titleList, this.state.title],\n          noteList: [this.state.noteList, this.state.note]\n        }); // this.setState({ noteList: [this.state.noteList, this.state.note] })\n\n        console.log(\"hi\");\n      }\n    };\n\n    this.clearNote = () => {\n      if (this.state.note !== \"\") {\n        this.setState({\n          note: \"\",\n          title: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      title: \"\",\n      note: \"\",\n      titleList: [],\n      noteList: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \" Notes Application \"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \" Title \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"textArea\",\n      onChange: e => this.getTitle(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"noteArea\",\n      onChange: e => this.getNotes(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.saveNote(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Save Note\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.clearNote(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Clear Note\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sauhilfaraz/Desktop/Launch Training/notes-app/src/App.js"],"names":["React","Component","App","constructor","props","getNotes","e","newNote","target","value","setState","note","getTitle","newTitle","title","console","log","state","saveNote","titleList","noteList","clearNote","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n/* \nManage four variables with state:\n\"title, note, titleList, and noteList\"\n\nUse the titleList and noteList to keep track of and save\nall the notes the user writes down so we can display them\n*/\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      title: \"\",\n      note: \"\",\n      titleList: [],\n      noteList: []\n    };\n  }\n\n\ngetNotes = (e) => {\n  let newNote = e.target.value; // Assigns the value of the 'e' parameter to 'newNote'\n  this.setState({\n    note: newNote, // Update note with state\n  });\n};\n\ngetTitle = (e) => {\n  let newTitle = e.target.value; // Assigns the value of the 'e' parameter to 'newTitle'\n  this.setState({\n    title: newTitle // Update title with state\n  });\n  console.log(this.state.title);\n};\n\nsaveNote = () => {\n  if(this.state.title !== \"\" && this.state.note !== \"\"){\n    this.setState({ \n      titleList: [this.state.titleList, this.state.title],\n      noteList: [this.state.noteList, this.state.note] \n    });\n    // this.setState({ noteList: [this.state.noteList, this.state.note] })\n    console.log(\"hi\");\n  } \n};\n\nclearNote = () => {\n  if(this.state.note !== \"\" ){\n    this.setState({\n      note: \"\",\n      title: \"\"\n    });\n  }\n};\n\nrender() { \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        {/* Using the HTML tag 'h1' to create the application header */ }\n        <h1> Notes Application </h1>\n\n        {/* Using the HTML tag 'label' to create a label for the notes title */ }\n        <label> Title </label>\n\n        {/* Using the HTML tag 'input' to create a space for users to create a title for their note */ }\n        {/* Using 'onChange' because we input text and want the value to change as the text changes */ }\n        <input type=\"text\" id=\"textArea\" onChange={e=>this.getTitle(e)}> \n        </input>\n\n        {/* Using the HTML tag 'textarea' to create the notes component */ }\n        {/* Using 'onChange' because we input text and want the value to change as the text changes */ }\n        <textarea id=\"noteArea\" onChange={e=>this.getNotes(e)}>\n        </textarea>\n\n        {/* Create note, uses 'onClick' function to call the 'saveNote' function */ }\n        {/* Not sure if the button type should be 'submit' instead of 'button' */ }\n        <button type=\"button\" onClick={()=>this.saveNote()}>\n          Save Note\n        </button>\n\n        {/* Clear note, uses 'onClick function to call the 'clearNote' function */ }\n        {/* Not sure if the button type should be 'reset' instead of 'button' */ }\n        <button type=\"button\" onClick={()=>this.clearNote()}>\n          Clear Note\n        </button>\n      </header>\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}