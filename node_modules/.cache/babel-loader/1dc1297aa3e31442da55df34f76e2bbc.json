{"ast":null,"code":"var _jsxFileName = \"/Users/sauhilfaraz/Desktop/Launch Training/NotesApp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // import './Notes.js';\n\nimport Notes from './Notes.js';\n/* \nManage four variables with state:\n\"title, note, titleList, and noteList\"\n\nUse the titleList and noteList to keep track of and save\nall the notes the user writes down so we can display them\n*/\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.inputTitle = e => {\n      this.setState({\n        currentNote: {\n          title: e.target.value,\n          key: Date.now()\n        }\n      });\n    };\n\n    this.inputText = e => {\n      this.setState({\n        currentNote: {\n          text: e.target.value,\n          key: Date.now()\n        }\n      });\n    };\n\n    this.addNote = e => {\n      // e.preventDefault();\n      const newNote = this.state.currentNote;\n      console.log(newNote);\n\n      if (newNote.text !== \"\" && newNote.title != \"\") {\n        const newNotes = [...this.state.notes, newNote];\n        this.setState({\n          notes: newNotes,\n          currentNote: {\n            title: '',\n            text: '',\n            key: ''\n          }\n        });\n      }\n    };\n\n    this.deleteNote = key => {\n      const filteredNotes = this.state.notes.filter(note => note.key !== key);\n      this.setState({\n        notes: filteredNotes\n      });\n    };\n\n    this.clearNote = () => {\n      if (this.state.currentNote.title !== \"\" && this.state.currentNote.text !== \"\") {\n        this.setState({\n          currentNote: {\n            title: '',\n            text: '',\n            key: ''\n          }\n        });\n      }\n    };\n\n    this.state = {\n      notes: [],\n      currentNote: {\n        title: \"\",\n        text: \"\",\n        key: \"\"\n      }\n    };\n    this.inputText = this.inputText.bind(this);\n    this.inputTitle = this.inputTitle.bind(this);\n    this.addNote = this.addNote.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \" Notes Application \"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \" Title \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"textArea\",\n      value: this.state.currentNote.title,\n      onChange: e => this.inputTitle(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"noteArea\",\n      value: this.state.currentNote.text,\n      onChange: e => this.inputText(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.addNote(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Save Note\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.clearNote(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \"Clear Note\")), /*#__PURE__*/React.createElement(Notes, {\n      notes: this.state.notes // title={this.state.titleList}\n      // note={this.state.noteList}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), \"\\u2029\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sauhilfaraz/Desktop/Launch Training/NotesApp/src/App.js"],"names":["React","Component","Notes","App","constructor","props","inputTitle","e","setState","currentNote","title","target","value","key","Date","now","inputText","text","addNote","newNote","state","console","log","newNotes","notes","deleteNote","filteredNotes","filter","note","clearNote","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n// import './Notes.js';\nimport Notes from './Notes.js';\n\n/* \nManage four variables with state:\n\"title, note, titleList, and noteList\"\n\nUse the titleList and noteList to keep track of and save\nall the notes the user writes down so we can display them\n*/\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      notes: [],\n      currentNote: {\n        title: \"\",\n        text: \"\",\n        key: \"\",\n      }\n    };\n    this.inputText = this.inputText.bind(this);\n    this.inputTitle = this.inputTitle.bind(this);\n    this.addNote = this.addNote.bind(this);\n  }\n\n  inputTitle = (e) => {\n    this.setState({\n      currentNote: {\n        title: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  inputText = (e) => {\n    this.setState({\n      currentNote:{\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  addNote = (e) => {\n    // e.preventDefault();\n    const newNote = this.state.currentNote;\n    console.log(newNote);\n    if(newNote.text !== \"\" && newNote.title != \"\"){\n      const newNotes = [...this.state.notes, newNote];\n      this.setState({\n        notes: newNotes,\n        currentNote: {\n          title: '',\n          text: '',\n          key: ''\n        }\n      })\n    } \n\n  }\n\n  deleteNote = (key) => {\n    const filteredNotes = this.state.notes.filter(note => note.key !== key);\n    this.setState({\n      notes: filteredNotes\n    })\n  }\n\nclearNote = () => {\n  if(this.state.currentNote.title !== \"\" && this.state.currentNote.text !== \"\"){\n    this.setState({\n      currentNote: {\n        title: '',\n        text: '',\n        key: ''\n      }\n    });\n  }\n};\n\n  render() { \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n          {/* Using the HTML tag 'h1' to create the application header */ }\n          <h1> Notes Application </h1>\n\n          {/* Using the HTML tag 'label' to create a label for the notes title */ }\n          <label> Title </label>\n\n          {/* Using the HTML tag 'input' to create a space for users to create a title for their note */ }\n          {/* Using 'onChange' because we input text and want the value to change as the text changes */ }\n          {/* <input type=\"text\" id=\"textArea\" value={this.state.currentNote.title}  onChange={e=>this.getTitle(e)}>  */}\n          <input type=\"text\" id=\"textArea\" value={this.state.currentNote.title}  onChange={e=>this.inputTitle(e)}> \n          </input>\n\n          {/* Using the HTML tag 'textarea' to create the notes component */ }\n          {/* Using 'onChange' because we input text and want the value to change as the text changes */ }\n          {/* <textarea id=\"noteArea\" value={this.state.currentNote.text}  onChange={e=>this.getNotes(e)}> */}\n          <textarea id=\"noteArea\" value={this.state.currentNote.text}  onChange={e=>this.inputText(e)}>\n          </textarea>\n\n          {/* Create note, uses 'onClick' function to call the 'saveNote' function */ }\n          {/* Not sure if the button type should be 'submit' instead of 'button' */ }\n          <button type=\"submit\" onClick={()=>this.addNote()}>\n            Save Note\n          </button>\n\n          {/* Clear note, uses 'onClick function to call the 'clearNote' function */ }\n          {/* Not sure if the button type should be 'reset' instead of 'button' */ }\n          <button type=\"submit\" onClick={()=>this.clearNote()}>\n            Clear Note\n          </button>\n        </header >\n\n        <Notes\n        notes = {this.state.notes}\n          // title={this.state.titleList}\n          // note={this.state.noteList}\n        /> \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}