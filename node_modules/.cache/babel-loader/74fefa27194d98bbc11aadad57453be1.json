{"ast":null,"code":"var _jsxFileName = \"/Users/sauhilfaraz/Desktop/Launch Training/notes-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport './Notes.js';\nimport Notes from './Notes.js';\n/* \nManage four variables with state:\n\"title, note, titleList, and noteList\"\n\nUse the titleList and noteList to keep track of and save\nall the notes the user writes down so we can display them\n*/\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.inputTitle = e => {\n      this.setState({\n        currentNote: {\n          title: e.target.value,\n          key: Date.now()\n        }\n      });\n    };\n\n    this.inputText = e => {\n      this.setState({\n        currentNote: {\n          text: e.target.value,\n          key: Date.now()\n        }\n      });\n    };\n\n    this.addNote = e => {\n      e.preventDefault();\n      const newNote = this.state.currentNote;\n      console.log(newNote);\n\n      if (newNote.text !== \"\" && newNote.title != \"\") {\n        const newNotes = [...this.state.notes, newNotes];\n        this.setState({\n          notes: newNotes,\n          currentNote: {\n            title: '',\n            text: '',\n            key: ''\n          }\n        });\n      }\n    };\n\n    this.getNotes = e => {\n      // let newNote = e.target.value; // Assigns the value of the 'e' parameter to 'newNote'\n      this.setState({\n        currentNote: {\n          note: e.target.value\n        }\n      });\n    };\n\n    this.getTitle = e => {\n      // let newTitle = e.target.value; // Assigns the value of the 'e' parameter to 'newTitle'\n      this.setState({\n        currentNote: {\n          title: e.target.value\n        }\n      });\n    };\n\n    this.addNote = e => {\n      e.preventDefault();\n      const newItem = this.state.currentNote;\n      console.log(newItem);\n\n      if (newItem.title !== \"\" && newItem.note !== \"\") {\n        const items = [...this.state.items, newItem];\n        this.setState({\n          items: newItem,\n          currentNote: {\n            title: \"\",\n            note: \"\"\n          }\n        });\n      }\n    };\n\n    this.saveNote = () => {\n      if (this.state.title !== \"\" && this.state.note !== \"\") {\n        this.setState({\n          titleList: [this.state.titleList, this.state.title],\n          noteList: [this.state.noteList, this.state.note]\n        }); // this.setState({ noteList: [this.state.noteList, this.state.note] })\n      }\n    };\n\n    this.clearNote = () => {\n      if (this.state.currentNote.title !== \"\" && this.state.currentNote.text !== \"\") {\n        this.setState({\n          currentNote: {\n            title: '',\n            text: '',\n            key: ''\n          }\n        });\n      }\n    };\n\n    this.state = {\n      notes: [],\n      currentNote: {\n        title: \"\",\n        text: \"\",\n        key: \"\"\n      }\n    };\n    this.inputText = this.inputText.bind(this);\n    this.inputText = this.inputTitle.bind(this);\n    this.addNote = this.addNote.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, \" Notes Application \"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, \" Title \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"textArea\",\n      value: this.state.currentNote.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"noteArea\",\n      value: this.state.currentNote.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.saveNote(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, \"Save Note\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.clearNote(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, \"Clear Note\")), /*#__PURE__*/React.createElement(Notes, {\n      items: this.state.items // title={this.state.titleList}\n      // note={this.state.noteList}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }), \"\\u2029\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sauhilfaraz/Desktop/Launch Training/notes-app/src/App.js"],"names":["React","Component","Notes","App","constructor","props","inputTitle","e","setState","currentNote","title","target","value","key","Date","now","inputText","text","addNote","preventDefault","newNote","state","console","log","newNotes","notes","getNotes","note","getTitle","newItem","items","saveNote","titleList","noteList","clearNote","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport './Notes.js';\nimport Notes from './Notes.js';\n\n/* \nManage four variables with state:\n\"title, note, titleList, and noteList\"\n\nUse the titleList and noteList to keep track of and save\nall the notes the user writes down so we can display them\n*/\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      notes: [],\n      currentNote: {\n        title: \"\",\n        text: \"\",\n        key: \"\",\n      }\n    };\n    this.inputText = this.inputText.bind(this);\n    this.inputText = this.inputTitle.bind(this);\n    this.addNote = this.addNote.bind(this);\n  }\n\n  inputTitle = (e) => {\n    this.setState({\n      currentNote: {\n        title: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  inputText = (e) => {\n    this.setState({\n      currentNote:{\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  addNote = (e) => {\n    e.preventDefault();\n    const newNote = this.state.currentNote;\n    console.log(newNote);\n    if(newNote.text !== \"\" && newNote.title != \"\"){\n      const newNotes = [...this.state.notes, newNotes];\n      this.setState({\n        notes: newNotes,\n        currentNote: {\n          title: '',\n          text: '',\n          key: ''\n        }\n      })\n    } \n\n  }\n\n\n\n\n\n\ngetNotes = (e) => {\n  // let newNote = e.target.value; // Assigns the value of the 'e' parameter to 'newNote'\n  this.setState({\n    currentNote: {\n      note: e.target.value\n    }\n  });\n};\n\ngetTitle = (e) => {\n  // let newTitle = e.target.value; // Assigns the value of the 'e' parameter to 'newTitle'\n  this.setState({\n    currentNote: {\n      title: e.target.value\n    }\n  });\n};\n\naddNote = (e) => {\n  e.preventDefault();\n  const newItem = this.state.currentNote;\n  console.log(newItem);\n  if(newItem.title !== \"\" && newItem.note !== \"\"){\n    const items = [...this.state.items, newItem]\n    this.setState({\n      items : newItem,\n      currentNote:{\n        title:\"\",\n        note: \"\"\n      }\n    })\n  }\n}\n\nsaveNote = () => {\n  if(this.state.title !== \"\" && this.state.note !== \"\"){\n    this.setState({ \n      titleList: [this.state.titleList, this.state.title],\n      noteList: [this.state.noteList, this.state.note] \n    });\n    // this.setState({ noteList: [this.state.noteList, this.state.note] })\n  } \n};\n\nclearNote = () => {\n  if(this.state.currentNote.title !== \"\" && this.state.currentNote.text !== \"\"){\n    this.setState({\n      currentNote: {\n        title: '',\n        text: '',\n        key: ''\n      }\n    });\n  }\n};\n\nrender() { \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        {/* Using the HTML tag 'h1' to create the application header */ }\n        <h1> Notes Application </h1>\n\n        {/* Using the HTML tag 'label' to create a label for the notes title */ }\n        <label> Title </label>\n\n        {/* Using the HTML tag 'input' to create a space for users to create a title for their note */ }\n        {/* Using 'onChange' because we input text and want the value to change as the text changes */ }\n        {/* <input type=\"text\" id=\"textArea\" value={this.state.currentNote.title}  onChange={e=>this.getTitle(e)}>  */}\n        <input type=\"text\" id=\"textArea\" value={this.state.currentNote.title} > \n        </input>\n\n        {/* Using the HTML tag 'textarea' to create the notes component */ }\n        {/* Using 'onChange' because we input text and want the value to change as the text changes */ }\n        {/* <textarea id=\"noteArea\" value={this.state.currentNote.text}  onChange={e=>this.getNotes(e)}> */}\n        <textarea id=\"noteArea\" value={this.state.currentNote.text} >\n        </textarea>\n\n        {/* Create note, uses 'onClick' function to call the 'saveNote' function */ }\n        {/* Not sure if the button type should be 'submit' instead of 'button' */ }\n        <button type=\"submit\" onClick={()=>this.saveNote()}>\n          Save Note\n        </button>\n\n        {/* Clear note, uses 'onClick function to call the 'clearNote' function */ }\n        {/* Not sure if the button type should be 'reset' instead of 'button' */ }\n        <button type=\"submit\" onClick={()=>this.clearNote()}>\n          Clear Note\n        </button>\n      </header >\n\n      <Notes\n      items = {this.state.items}\n        // title={this.state.titleList}\n        // note={this.state.noteList}\n      /> \n\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}